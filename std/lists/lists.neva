component {
    #extern(list_accumulator)
    pub Accumulator<T>(els stream<T>) (res list<T>)

    #extern(list_builder)
    pub Builder<T> ([els] T) (res list<T>)
    
    #extern(list_concatenator)
    pub Concatenator<T> (lsts stream<list<T>>) (res list<T>)

    #extern(list_pusher)
    pub Pusher<T> (l list<T>, el T) (res list<T>)

    #extern(list_updater)
    pub Updater<T> (l list<T>, i int, el T) (res list<T>, err error)

    #extern(list_selector)
    pub Selector<T>(l list<T>, i int) (ok T, miss int)

    #extern(list_slicer)
    pub Slicer<T>(l list<T>, from int, to int) (res list<T>, err error)
}
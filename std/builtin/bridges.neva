// Bridges are basically decorators that works over DI API
// they serve as adapters for stream handlers and outside world:

interface {
    pub IStreamHandler<T>(seq stream<T>) (res T)
}

component {
    pub PortBridge<T>([p] T) (res T) {
        nodes {
            streamer PortStreamer<T>
            handler IStreamHandler<T>
        }
        net {
            :p -> streamer:p
            streamer:seq -> handler:seq
            handler:res -> :res
        }
    }

    pub ListBridge<T>(l list<T>) (res T) {
        nodes {
            streamer ListStreamer<T>
            handler IStreamHandler<T>
        }
        net {
            :l -> streamer:l
            streamer:seq -> handler:seq
            handler:res -> :res
        }
    }

    pub MapBridge<T>(m map<T>) (res T) {
        nodes {
            streamer MapStreamer<T>
            handler IStreamHandler<T>
        }
        net {
            :m -> streamer:m
            streamer:seq -> handler:seq
            handler:res -> :res
        }
    }
}
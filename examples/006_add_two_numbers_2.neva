// Turns out previous implementation was a bit naive, parse number could fail.
// This time we will handle errors by printing them.
// Note how program terminates. In case one of two parse failed or
// after printing success result.

use {
	std/tmp
}

components {
	Main(enter) (exit) {
		nodes {
			readFirst tmp.Read
			readSecond tmp.Read

			parseFirst tmp.ParseInt
			parseSecond tmp.ParseInt

			add Add<int>
			print tmp.Print<any>
		}

		net {
			in.enter -> readFirst.sig
			readFirst.v -> parseFirst.v
			parseFirst.err -> print.v
			parseFirst.v -> {
				add.a
				readSecond.sig
			}
			
			readSecond.v -> parseSecond.v
			parseSecond.err -> print.v
			parseSecond.v -> add.b

			add.v -> print.v
			print.v -> out.exit
		}
	}
}
import {
  io
  image
}

component NewPixel(x int, y int, c image.RGBA) (pixel image.Pixel) {
  nodes { pb Struct<image.Pixel> }
  net {
    :x -> pb:x
    :y -> pb:y
    :c -> pb:color
    pb -> :pixel
  }
}

component NewColor(r int, g int, b int, a int) (color image.RGBA) {
  nodes {
    cb Struct<image.RGBA>
  }
  net {
    :r -> cb:r
    :g -> cb:g
    :b -> cb:b
    :a -> cb:a
    cb -> :color
  }
}

// FIXME send to -> :s
component NewStream(p image.Pixel) (s stream<image.Pixel>) {
  nodes { sb Struct<stream<image.Pixel>> }
  net {
    0 -> sb:idx
    :p -> sb:data
    true -> sb:last
    sb -> :s
  }
}

component Main(start) (stop) {
  nodes {
    NewPixel
    NewColor
    NewStream
    image.New
    image.Encode
    io.WriteAll
    Println
  }
  net {
    :start -> [
      (0 -> [newColor:r, newColor:g, newColor:b, newColor:a]),
      (15 -> [newPixel:x, newPixel:y]),
      ('minimal.png' -> writeAll:filename)
    ]
    newColor -> newPixel:c
    newPixel -> newStream:p
    newStream:s -> new
    new:img -> encode:img
    encode:data -> writeAll:data
    [new:err, encode:err, writeAll:err] -> println -> :stop
    writeAll:sig -> :stop
  }
}

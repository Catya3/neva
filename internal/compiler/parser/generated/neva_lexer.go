// Code generated from ./neva.g4 by ANTLR 4.13.1. DO NOT EDIT.

package parsing

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type nevaLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var NevaLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func nevalexerLexerInit() {
	staticData := &NevaLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'#'", "'('", "','", "')'", "'import'", "'{'", "'}'", "'@/'", "'.'",
		"'/'", "'types'", "'<'", "'>'", "'enum'", "'['", "']'", "'struct'",
		"'|'", "'interfaces'", "'const'", "'true'", "'false'", "'nil'", "':'",
		"'components'", "'nodes'", "'net'", "'->'", "'$'", "", "", "", "'pub'",
	}
	staticData.SymbolicNames = []string{
		"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
		"", "", "", "", "", "", "", "", "", "", "", "", "", "PkgRef", "EntityName",
		"COMMENT", "PUB_KW", "IDENTIFIER", "INT", "FLOAT", "STRING", "NEWLINE",
		"WS",
	}
	staticData.RuleNames = []string{
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24",
		"T__25", "T__26", "T__27", "T__28", "PkgRef", "EntityName", "COMMENT",
		"PUB_KW", "IDENTIFIER", "LETTER", "INT", "FLOAT", "STRING", "NEWLINE",
		"WS",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 39, 260, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 2, 39, 7, 39, 1, 0, 1, 0, 1, 1, 1, 1,
		1, 2, 1, 2, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5,
		1, 5, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 8, 1, 8, 1, 9, 1, 9, 1, 10, 1, 10,
		1, 10, 1, 10, 1, 10, 1, 10, 1, 11, 1, 11, 1, 12, 1, 12, 1, 13, 1, 13, 1,
		13, 1, 13, 1, 13, 1, 14, 1, 14, 1, 15, 1, 15, 1, 16, 1, 16, 1, 16, 1, 16,
		1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1,
		18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 18, 1, 19, 1, 19, 1, 19, 1, 19, 1, 19,
		1, 19, 1, 20, 1, 20, 1, 20, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 21, 1,
		21, 1, 21, 1, 22, 1, 22, 1, 22, 1, 22, 1, 23, 1, 23, 1, 24, 1, 24, 1, 24,
		1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 24, 1, 25, 1, 25, 1,
		25, 1, 25, 1, 25, 1, 25, 1, 26, 1, 26, 1, 26, 1, 26, 1, 27, 1, 27, 1, 27,
		1, 28, 1, 28, 1, 29, 1, 29, 1, 30, 1, 30, 1, 31, 1, 31, 1, 31, 1, 31, 5,
		31, 204, 8, 31, 10, 31, 12, 31, 207, 9, 31, 1, 32, 1, 32, 1, 32, 1, 32,
		1, 33, 1, 33, 1, 33, 5, 33, 216, 8, 33, 10, 33, 12, 33, 219, 9, 33, 1,
		34, 1, 34, 1, 35, 4, 35, 224, 8, 35, 11, 35, 12, 35, 225, 1, 36, 5, 36,
		229, 8, 36, 10, 36, 12, 36, 232, 9, 36, 1, 36, 1, 36, 4, 36, 236, 8, 36,
		11, 36, 12, 36, 237, 1, 37, 1, 37, 5, 37, 242, 8, 37, 10, 37, 12, 37, 245,
		9, 37, 1, 37, 1, 37, 1, 38, 3, 38, 250, 8, 38, 1, 38, 1, 38, 1, 39, 4,
		39, 255, 8, 39, 11, 39, 12, 39, 256, 1, 39, 1, 39, 1, 243, 0, 40, 1, 1,
		3, 2, 5, 3, 7, 4, 9, 5, 11, 6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23,
		12, 25, 13, 27, 14, 29, 15, 31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41,
		21, 43, 22, 45, 23, 47, 24, 49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59,
		30, 61, 31, 63, 32, 65, 33, 67, 34, 69, 0, 71, 35, 73, 36, 75, 37, 77,
		38, 79, 39, 1, 0, 4, 2, 0, 10, 10, 13, 13, 3, 0, 65, 90, 95, 95, 97, 122,
		1, 0, 48, 57, 2, 0, 9, 9, 32, 32, 267, 0, 1, 1, 0, 0, 0, 0, 3, 1, 0, 0,
		0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9, 1, 0, 0, 0, 0, 11, 1, 0, 0,
		0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0, 17, 1, 0, 0, 0, 0, 19, 1, 0,
		0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0, 0, 25, 1, 0, 0, 0, 0, 27, 1,
		0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0, 0, 0, 33, 1, 0, 0, 0, 0, 35,
		1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0, 0, 0, 0, 41, 1, 0, 0, 0, 0,
		43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1, 0, 0, 0, 0, 49, 1, 0, 0, 0,
		0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55, 1, 0, 0, 0, 0, 57, 1, 0, 0,
		0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0, 63, 1, 0, 0, 0, 0, 65, 1, 0,
		0, 0, 0, 67, 1, 0, 0, 0, 0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 0, 75, 1,
		0, 0, 0, 0, 77, 1, 0, 0, 0, 0, 79, 1, 0, 0, 0, 1, 81, 1, 0, 0, 0, 3, 83,
		1, 0, 0, 0, 5, 85, 1, 0, 0, 0, 7, 87, 1, 0, 0, 0, 9, 89, 1, 0, 0, 0, 11,
		96, 1, 0, 0, 0, 13, 98, 1, 0, 0, 0, 15, 100, 1, 0, 0, 0, 17, 103, 1, 0,
		0, 0, 19, 105, 1, 0, 0, 0, 21, 107, 1, 0, 0, 0, 23, 113, 1, 0, 0, 0, 25,
		115, 1, 0, 0, 0, 27, 117, 1, 0, 0, 0, 29, 122, 1, 0, 0, 0, 31, 124, 1,
		0, 0, 0, 33, 126, 1, 0, 0, 0, 35, 133, 1, 0, 0, 0, 37, 135, 1, 0, 0, 0,
		39, 146, 1, 0, 0, 0, 41, 152, 1, 0, 0, 0, 43, 157, 1, 0, 0, 0, 45, 163,
		1, 0, 0, 0, 47, 167, 1, 0, 0, 0, 49, 169, 1, 0, 0, 0, 51, 180, 1, 0, 0,
		0, 53, 186, 1, 0, 0, 0, 55, 190, 1, 0, 0, 0, 57, 193, 1, 0, 0, 0, 59, 195,
		1, 0, 0, 0, 61, 197, 1, 0, 0, 0, 63, 199, 1, 0, 0, 0, 65, 208, 1, 0, 0,
		0, 67, 212, 1, 0, 0, 0, 69, 220, 1, 0, 0, 0, 71, 223, 1, 0, 0, 0, 73, 230,
		1, 0, 0, 0, 75, 239, 1, 0, 0, 0, 77, 249, 1, 0, 0, 0, 79, 254, 1, 0, 0,
		0, 81, 82, 5, 35, 0, 0, 82, 2, 1, 0, 0, 0, 83, 84, 5, 40, 0, 0, 84, 4,
		1, 0, 0, 0, 85, 86, 5, 44, 0, 0, 86, 6, 1, 0, 0, 0, 87, 88, 5, 41, 0, 0,
		88, 8, 1, 0, 0, 0, 89, 90, 5, 105, 0, 0, 90, 91, 5, 109, 0, 0, 91, 92,
		5, 112, 0, 0, 92, 93, 5, 111, 0, 0, 93, 94, 5, 114, 0, 0, 94, 95, 5, 116,
		0, 0, 95, 10, 1, 0, 0, 0, 96, 97, 5, 123, 0, 0, 97, 12, 1, 0, 0, 0, 98,
		99, 5, 125, 0, 0, 99, 14, 1, 0, 0, 0, 100, 101, 5, 64, 0, 0, 101, 102,
		5, 47, 0, 0, 102, 16, 1, 0, 0, 0, 103, 104, 5, 46, 0, 0, 104, 18, 1, 0,
		0, 0, 105, 106, 5, 47, 0, 0, 106, 20, 1, 0, 0, 0, 107, 108, 5, 116, 0,
		0, 108, 109, 5, 121, 0, 0, 109, 110, 5, 112, 0, 0, 110, 111, 5, 101, 0,
		0, 111, 112, 5, 115, 0, 0, 112, 22, 1, 0, 0, 0, 113, 114, 5, 60, 0, 0,
		114, 24, 1, 0, 0, 0, 115, 116, 5, 62, 0, 0, 116, 26, 1, 0, 0, 0, 117, 118,
		5, 101, 0, 0, 118, 119, 5, 110, 0, 0, 119, 120, 5, 117, 0, 0, 120, 121,
		5, 109, 0, 0, 121, 28, 1, 0, 0, 0, 122, 123, 5, 91, 0, 0, 123, 30, 1, 0,
		0, 0, 124, 125, 5, 93, 0, 0, 125, 32, 1, 0, 0, 0, 126, 127, 5, 115, 0,
		0, 127, 128, 5, 116, 0, 0, 128, 129, 5, 114, 0, 0, 129, 130, 5, 117, 0,
		0, 130, 131, 5, 99, 0, 0, 131, 132, 5, 116, 0, 0, 132, 34, 1, 0, 0, 0,
		133, 134, 5, 124, 0, 0, 134, 36, 1, 0, 0, 0, 135, 136, 5, 105, 0, 0, 136,
		137, 5, 110, 0, 0, 137, 138, 5, 116, 0, 0, 138, 139, 5, 101, 0, 0, 139,
		140, 5, 114, 0, 0, 140, 141, 5, 102, 0, 0, 141, 142, 5, 97, 0, 0, 142,
		143, 5, 99, 0, 0, 143, 144, 5, 101, 0, 0, 144, 145, 5, 115, 0, 0, 145,
		38, 1, 0, 0, 0, 146, 147, 5, 99, 0, 0, 147, 148, 5, 111, 0, 0, 148, 149,
		5, 110, 0, 0, 149, 150, 5, 115, 0, 0, 150, 151, 5, 116, 0, 0, 151, 40,
		1, 0, 0, 0, 152, 153, 5, 116, 0, 0, 153, 154, 5, 114, 0, 0, 154, 155, 5,
		117, 0, 0, 155, 156, 5, 101, 0, 0, 156, 42, 1, 0, 0, 0, 157, 158, 5, 102,
		0, 0, 158, 159, 5, 97, 0, 0, 159, 160, 5, 108, 0, 0, 160, 161, 5, 115,
		0, 0, 161, 162, 5, 101, 0, 0, 162, 44, 1, 0, 0, 0, 163, 164, 5, 110, 0,
		0, 164, 165, 5, 105, 0, 0, 165, 166, 5, 108, 0, 0, 166, 46, 1, 0, 0, 0,
		167, 168, 5, 58, 0, 0, 168, 48, 1, 0, 0, 0, 169, 170, 5, 99, 0, 0, 170,
		171, 5, 111, 0, 0, 171, 172, 5, 109, 0, 0, 172, 173, 5, 112, 0, 0, 173,
		174, 5, 111, 0, 0, 174, 175, 5, 110, 0, 0, 175, 176, 5, 101, 0, 0, 176,
		177, 5, 110, 0, 0, 177, 178, 5, 116, 0, 0, 178, 179, 5, 115, 0, 0, 179,
		50, 1, 0, 0, 0, 180, 181, 5, 110, 0, 0, 181, 182, 5, 111, 0, 0, 182, 183,
		5, 100, 0, 0, 183, 184, 5, 101, 0, 0, 184, 185, 5, 115, 0, 0, 185, 52,
		1, 0, 0, 0, 186, 187, 5, 110, 0, 0, 187, 188, 5, 101, 0, 0, 188, 189, 5,
		116, 0, 0, 189, 54, 1, 0, 0, 0, 190, 191, 5, 45, 0, 0, 191, 192, 5, 62,
		0, 0, 192, 56, 1, 0, 0, 0, 193, 194, 5, 36, 0, 0, 194, 58, 1, 0, 0, 0,
		195, 196, 3, 67, 33, 0, 196, 60, 1, 0, 0, 0, 197, 198, 3, 67, 33, 0, 198,
		62, 1, 0, 0, 0, 199, 200, 5, 47, 0, 0, 200, 201, 5, 47, 0, 0, 201, 205,
		1, 0, 0, 0, 202, 204, 8, 0, 0, 0, 203, 202, 1, 0, 0, 0, 204, 207, 1, 0,
		0, 0, 205, 203, 1, 0, 0, 0, 205, 206, 1, 0, 0, 0, 206, 64, 1, 0, 0, 0,
		207, 205, 1, 0, 0, 0, 208, 209, 5, 112, 0, 0, 209, 210, 5, 117, 0, 0, 210,
		211, 5, 98, 0, 0, 211, 66, 1, 0, 0, 0, 212, 217, 3, 69, 34, 0, 213, 216,
		3, 69, 34, 0, 214, 216, 3, 71, 35, 0, 215, 213, 1, 0, 0, 0, 215, 214, 1,
		0, 0, 0, 216, 219, 1, 0, 0, 0, 217, 215, 1, 0, 0, 0, 217, 218, 1, 0, 0,
		0, 218, 68, 1, 0, 0, 0, 219, 217, 1, 0, 0, 0, 220, 221, 7, 1, 0, 0, 221,
		70, 1, 0, 0, 0, 222, 224, 7, 2, 0, 0, 223, 222, 1, 0, 0, 0, 224, 225, 1,
		0, 0, 0, 225, 223, 1, 0, 0, 0, 225, 226, 1, 0, 0, 0, 226, 72, 1, 0, 0,
		0, 227, 229, 7, 2, 0, 0, 228, 227, 1, 0, 0, 0, 229, 232, 1, 0, 0, 0, 230,
		228, 1, 0, 0, 0, 230, 231, 1, 0, 0, 0, 231, 233, 1, 0, 0, 0, 232, 230,
		1, 0, 0, 0, 233, 235, 5, 46, 0, 0, 234, 236, 7, 2, 0, 0, 235, 234, 1, 0,
		0, 0, 236, 237, 1, 0, 0, 0, 237, 235, 1, 0, 0, 0, 237, 238, 1, 0, 0, 0,
		238, 74, 1, 0, 0, 0, 239, 243, 5, 39, 0, 0, 240, 242, 9, 0, 0, 0, 241,
		240, 1, 0, 0, 0, 242, 245, 1, 0, 0, 0, 243, 244, 1, 0, 0, 0, 243, 241,
		1, 0, 0, 0, 244, 246, 1, 0, 0, 0, 245, 243, 1, 0, 0, 0, 246, 247, 5, 39,
		0, 0, 247, 76, 1, 0, 0, 0, 248, 250, 5, 13, 0, 0, 249, 248, 1, 0, 0, 0,
		249, 250, 1, 0, 0, 0, 250, 251, 1, 0, 0, 0, 251, 252, 5, 10, 0, 0, 252,
		78, 1, 0, 0, 0, 253, 255, 7, 3, 0, 0, 254, 253, 1, 0, 0, 0, 255, 256, 1,
		0, 0, 0, 256, 254, 1, 0, 0, 0, 256, 257, 1, 0, 0, 0, 257, 258, 1, 0, 0,
		0, 258, 259, 6, 39, 0, 0, 259, 80, 1, 0, 0, 0, 10, 0, 205, 215, 217, 225,
		230, 237, 243, 249, 256, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// nevaLexerInit initializes any static state used to implement nevaLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewnevaLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func NevaLexerInit() {
	staticData := &NevaLexerLexerStaticData
	staticData.once.Do(nevalexerLexerInit)
}

// NewnevaLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewnevaLexer(input antlr.CharStream) *nevaLexer {
	NevaLexerInit()
	l := new(nevaLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &NevaLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "neva.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// nevaLexer tokens.
const (
	nevaLexerT__0       = 1
	nevaLexerT__1       = 2
	nevaLexerT__2       = 3
	nevaLexerT__3       = 4
	nevaLexerT__4       = 5
	nevaLexerT__5       = 6
	nevaLexerT__6       = 7
	nevaLexerT__7       = 8
	nevaLexerT__8       = 9
	nevaLexerT__9       = 10
	nevaLexerT__10      = 11
	nevaLexerT__11      = 12
	nevaLexerT__12      = 13
	nevaLexerT__13      = 14
	nevaLexerT__14      = 15
	nevaLexerT__15      = 16
	nevaLexerT__16      = 17
	nevaLexerT__17      = 18
	nevaLexerT__18      = 19
	nevaLexerT__19      = 20
	nevaLexerT__20      = 21
	nevaLexerT__21      = 22
	nevaLexerT__22      = 23
	nevaLexerT__23      = 24
	nevaLexerT__24      = 25
	nevaLexerT__25      = 26
	nevaLexerT__26      = 27
	nevaLexerT__27      = 28
	nevaLexerT__28      = 29
	nevaLexerPkgRef     = 30
	nevaLexerEntityName = 31
	nevaLexerCOMMENT    = 32
	nevaLexerPUB_KW     = 33
	nevaLexerIDENTIFIER = 34
	nevaLexerINT        = 35
	nevaLexerFLOAT      = 36
	nevaLexerSTRING     = 37
	nevaLexerNEWLINE    = 38
	nevaLexerWS         = 39
)
